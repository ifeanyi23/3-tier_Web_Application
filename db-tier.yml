Parameters:
    ID:
        Description: Unique identifier.
        Type: String

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: 3TierWebApplication
        
    DBInstanceID:
      Description: My database instance
      Default: mydbinstance
      Type: String
      MinLength: '1'
      MaxLength: '63'
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
      ConstraintDescription: >-
        Must begin with a letter and must not end with a hyphen or contain two
        consecutive hyphens.
        
    DBName:
      Description: My database
      Type: String
      Default: mydb
      MinLength: '1'
      MaxLength: '64'
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
      ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
    DBInstanceClass:
      Description: DB instance class
      Type: String
      Default: db.t2.small
      ConstraintDescription: Must select a valid DB instance type.
      
    DBAllocatedStorage:
      Description: The size of the database (GiB)
      Type: Number
      Default: '20'
      MinValue: '20'
      MaxValue: '65536'
      ConstraintDescription: must be between 20 and 65536 GiB.
      
    DBUsername:
      Description: Username for MySQL database access
      Type: String
      Default: Admin
      NoEcho: 'true'
      MinLength: '1'
      MaxLength: '16'
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
      ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
      
    DBPassword:
      NoEcho: 'true'
      Description: Password MySQL database access
      Type: String
      Default: Okoify123
      MinLength: '8'
      MaxLength: '41'
      AllowedPattern: '[a-zA-Z0-9]*'
      ConstraintDescription: must contain only alphanumeric characters.
      
Resources:
    DBSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow access to our database from the app tier
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId:
               Fn::ImportValue: 
                 !Sub "${EnvironmentName}-APP-TIER-SG"
              
        SecurityGroupEgress:
          - IpProtocol: -1
            FromPort: -1
            ToPort: -1
            CidrIp: 0.0.0.0/0
            
    myDBSubnetGroup:
      Type: "AWS::RDS::DBSubnetGroup"
      Properties: 
        DBSubnetGroupDescription: The subnet where the database will be placed
        SubnetIds: 
          - Fn::ImportValue:
              Fn::Sub: "${EnvironmentName}-PRIVATE-SUBNET-3"
          - Fn::ImportValue:
              Fn::Sub: "${EnvironmentName}-PRIVATE-SUBNET-4"
      
      
    MyDB:
      Type: 'AWS::RDS::DBInstance'
      Properties:
        DBInstanceIdentifier: !Ref DBInstanceID
        DBName: !Ref DBName
        DBInstanceClass: !Ref DBInstanceClass
        VPCSecurityGroups: !Ref DBSecGroup
        DBSubnetGroupName: !Ref myDBSubnetGroup
        AllocatedStorage: !Ref DBAllocatedStorage
        Engine: MySQL
        MasterUsername: !Ref DBUsername
        MasterUserPassword: !Ref DBPassword
      DeletionPolicy: "Retain"
    
    